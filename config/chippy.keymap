/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define TMUX LC(A)

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                         then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp LBKT     &kp Q        &kp W     &kp E              &kp R                  &mt LC(T) T                 &kp Y         &kp U       &kp I     &kp O   &kp P    &kp RBKT
   &kp TMUX     &mt LC(A) A  &kp S     &kp D              &kp F                  &kp G                       &kp H         &kp J       &kp K     &kp L   &kp SEMI &kp SQT
   &kp LGUI     &kp Z        &kp X     &mt LC(C) C        &mt LC(V) V            &kp B                       &kp N         &kp M       &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                       &kp LSHFT          &lt 1 TAB              &mt LCTRL SPACE             &mt LALT RET  &lt 2 BSPC  &kp ESC
                        >;
                };

                lower_layer {
                        bindings = <
   &trans   &kp C_VOLUME_UP     &kp EXCL  &kp AT      &kp HASH    &kp PG_UP           &kp MINUS &kp EQUAL &trans   &trans     &trans    &trans
   &trans   &kp C_PLAY_PAUSE    &kp DLLR  &kp PRCNT   &kp CARET   &kp RPAR            &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &kp GRAVE &trans
   &trans   &kp C_VOLUME_DOWN   &kp AMPS  &kp ASTRK   &kp LPAR    &kp PG_DN           &trans    &trans    &trans   &trans     &trans    &trans
                                          &trans      &trans      &trans              &trans    &trans    &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &trans   &trans    &kp N1  &kp N2    &kp N3    &trans          &trans    &trans    &trans   &trans     &trans    &trans
   &trans   &trans    &kp N4  &kp N5    &kp N6    &kp N0          &trans    &trans    &trans   &trans     &trans    &trans
   &trans   &trans    &kp N7  &kp N8    &kp N9    &trans          &trans    &trans    &trans   &trans     &trans    &trans
                              &trans    &trans    &trans          &trans    &trans    &trans
                        >;
                };

                adjust_layer {
                        bindings = <
   &kp AT      &trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans &trans
   &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &trans
   &bootloader &trans       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans &bootloader
                            &trans       &trans       &trans       &trans       &trans &trans
                        >;
                };

        };
};
